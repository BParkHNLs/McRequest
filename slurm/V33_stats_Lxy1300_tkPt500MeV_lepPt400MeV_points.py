from python.common  import Point,Config,getCtauEff

# List of points to be generated
#   - N.B.: mass must be a float


m_ctau_eff_time_s = [


(1.0,  10000.0, 1.79e-04, 927.77, 662.8),
(1.0,   1000.0, 1.50e-03, 151.29, 654.0),
(1.0,    100.0, 5.47e-03, 77.71, 617.8),
(1.0,     10.0, 6.22e-03, 76.86, 644.9),
(1.5,  10000.0, 1.24e-04, 602.20, 703.8),
(1.5,   1000.0, 9.43e-04, 73.77, 691.3),
(1.5,    100.0, 3.44e-03, 28.05, 708.4),
(1.5,     10.0, 2.99e-03, 33.10, 696.1),
(2.0,  10000.0, 4.77e-05, 1843.10, 789.1),
(2.0,   1000.0, 4.07e-04, 262.53, 697.9),
(2.0,    100.0, 1.49e-03, 97.62, 700.8),
(2.0,     10.0, 1.82e-03, 82.17, 671.6),
(3.0,   1000.0, 2.10e-03, 76.99, 644.1),
(3.0,    100.0, 5.54e-03, 56.57, 697.6),
(3.0,     10.0, 5.82e-03, 52.48, 700.7),
(3.0,      1.0, 5.82e-03, 52.21, 701.2),
(4.5,    100.0, 4.36e-04, 261.42, 666.5),
(4.5,     10.0, 5.00e-04, 236.37, 668.2),
(4.5,      1.0, 5.22e-04, 227.18, 667.3),
(4.5,      0.1, 5.39e-04, 213.30, 683.8),

#(1.0,  10000.00, 1.69e-04, 427),
#(1.0,   1000.00, 1.34e-03, 70),
#(1.0,    100.00, 4.24e-03, 37),
#(1.0,     10.00, 4.86e-03, 29),
#(1.5,  10000.00, 1.02e-04, 678),
#(1.5,   1000.00, 8.42e-04, 98),
#(1.5,    100.00, 2.71e-03, 46),
#(1.5,     10.00, 2.99e-03, 49),
#(2.0,  10000.00, 4.68e-05, 1565),
#(2.0,   1000.00, 3.67e-04, 196),
#(2.0,    100.00, 1.25e-03, 75),
#(2.0,     10.00, 1.42e-03, 65),
#(3.0,   1000.00, 2.04e-03, 52),
#(3.0,    100.00, 4.82e-03, 33),
#(3.0,     10.00, 5.02e-03, 30),
#(3.0,      1.00, 5.02e-03, 30),
#(4.5,    100.00, 3.66e-04, 207),
#(4.5,     10.00, 4.39e-04, 165),
#(4.5,      1.00, 4.42e-04, 143),
#(4.5,      0.10, 4.42e-04, 131),

]

points = []
for m,ctau,eff,time,size in m_ctau_eff_time_s:
  p   = Point(mass=m,ctau=ctau,vv=None,ismaj=True)
  cfg = Config(nevtseff=5000,muoneff=eff,displeff=1.0,timeevt=time,timejob=12,contingency=3.)
  p.setConfig(cfg)
  points.append(p)

  # 

  #print('mass={:.1f} vv={:.1e} before={:.1e}, after={:.1e}'.format(p.mass,p.vv,displEff[m][vv],getCtauEff(p.ctau*4.,1000.))) # 4 is the assumed beta*gamma factor...
  #cfg.stamp()
  







